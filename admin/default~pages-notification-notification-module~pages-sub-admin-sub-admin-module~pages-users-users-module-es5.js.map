{"version":3,"sources":["webpack:///node_modules/@angular/cdk/fesm2015/layout.js","webpack:///node_modules/@angular/material/fesm2015/paginator.js","webpack:///node_modules/@angular/material/fesm2015/select.js","webpack:///node_modules/@angular/material/fesm2015/slide-toggle.js","webpack:///node_modules/@angular/material/fesm2015/tooltip.js"],"names":["LayoutModule","ɵmod","type","ɵinj","factory","LayoutModule_Factory","t","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","ɵfac","MediaMatcher_Factory","ɵprov","token","providedIn","ctorParameters","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","state","get","queryObservable","observer","handler","run","nextMql","output","set","BreakpointObserver_Factory","split","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","rf","ctx","pageSizeOption_r6","$implicit","MatPaginator_div_2_mat_form_field_3_Template","_r8","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","$event","ctx_r7","_changePageSize","ctx_r3","color","pageSize","disabled","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","ctx_r4","MatPaginator_div_2_Template","ctx_r0","length","MatPaginator_button_6_Template","_r10","MatPaginator_button_6_Template_button_click_0_listener","ctx_r9","firstPage","ctx_r1","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r12","MatPaginator_button_13_Template_button_click_0_listener","ctx_r11","lastPage","ctx_r2","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","changes","nextPageLabel","previousPageLabel","getRangeLabel","page","Math","max","startIndex","endIndex","min","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","provide","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","_changeDetectorRef","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","subscribe","markForCheck","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","unsubscribe","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","ceil","floor","slice","indexOf","push","sort","a","b","emit","p","MatPaginator_Factory","ɵcmp","selectors","hostAttrs","inputs","outputs","exportAs","features","decls","vars","consts","template","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","directives","styles","encapsulation","changeDetection","undefined","decorators","propDecorators","selector","host","OnPush","None","MatPaginatorModule","MatPaginatorModule_Factory","providers","imports","ngJitMode","declarations","exports","_c0","_c1","MatSelect_span_4_Template","placeholder","MatSelect_span_5_span_1_Template","ctx_r5","triggerValue","MatSelect_span_5_ng_content_2_Template","MatSelect_span_5_Template","customTrigger","MatSelect_ng_template_8_Template","_r9","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","ctx_r8","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","ctx_r10","_handleKeydown","_getPanelTheme","_transformOrigin","_triggerFontSize","panelClass","multiple","id","_c2","_c3","matSelectAnimations","transformPanelWrap","optional","transformPanel","transform","minWidth","opacity","getMatSelectDynamicMultipleError","Error","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","nextUniqueId","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","source","MatSelectBase","_elementRef","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","MatSelectTrigger_Factory","ɵdir","useExisting","MatSelect","_viewportRuler","_ngZone","elementRef","_dir","_parentFormField","tabIndex","scrollStrategyFactory","_liveAnnouncer","_panelOpen","_required","_scrollTop","_multiple","_compareWith","o1","o2","_uid","_destroy","_onChange","_onTouched","_optionIds","_offsetY","_positions","originX","originY","overlayX","overlayY","_disableOptionCentering","_focused","controlType","ariaLabel","optionSelectionChanges","options","option","onSelectionChange","onStable","asObservable","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","_scrollStrategyFactory","_scrollStrategy","parseInt","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","stateChanges","panelOpen","overlayDir","offsetX","change","_triggerRect","trigger","nativeElement","getBoundingClientRect","_initKeyManager","changed","event","added","select","removed","deselect","_resetOptions","_initializeSelection","updateErrorState","_keyManager","withTypeAhead","_typeaheadDebounceInterval","close","open","getComputedStyle","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","overlayRef","overlayElement","style","_isRtl","fn","isDisabled","_handleOpenKeydown","_handleClosedKeydown","keyCode","isArrowKey","isOpenKey","manager","isTyping","altKey","preventDefault","previouslySelectedOption","selected","setFirstItemActive","setLastItemActive","onKeydown","selectedOption","announce","viewValue","activeItem","_selectViaInteraction","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","Promise","resolve","then","_setSelectionByValue","_value","Array","isArray","clear","currentValue","_selectValue","_sortValues","correspondingOption","updateActiveItem","find","warn","withVerticalOrientation","withAllowedModifierKeys","tabOut","focus","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","setActiveItem","toArray","sortComparator","fallbackValue","valueToEmit","join","empty","activeOptionIndex","labelCount","optionGroups","_getItemHeight","result","current","index","itemHeight","items","_getItemCount","panelHeight","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_hasFloatingLabel","_getAriaLabel","_labelId","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","first","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","optionHeightAdjustment","height","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","top","bottomSpaceAvailable","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","ids","_ariaDescribedby","_placeholder","newValue","_id","selectedOptions","reverse","isEmpty","MatSelect_Factory","contentQueries","MatSelect_ContentQueries","dirIndex","_t","viewQuery","MatSelect_Query","hostVars","hostBindings","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","_onFocus","MatSelect_blur_HostBindingHandler","_onBlur","_getAriaLabelledby","required","toString","errorState","_getAriaActiveDescendant","disableRipple","compareWith","errorStateMatcher","ngContentSelectors","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r0","data","animation","String","descendants","animations","MatSelectModule","MatSelectModule_Factory","enterDuration","_c4","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","multi","MatSlideToggleChange","checked","MatSlideToggleBase","_MatSlideToggleMixinBase","_focusMonitor","_animationMode","_","_uniqueId","_checked","name","labelPosition","toggleChange","monitor","focusOrigin","_inputElement","stopMonitoring","stopPropagation","_emitChangeEvent","focusVia","MatSlideToggle_Factory","MatSlideToggle_Query","_thumbEl","_thumbBarEl","MatSlideToggle_HostBindings","MatSlideToggle_Template","MatSlideToggle_Template_input_change_4_listener","_onChangeEvent","MatSlideToggle_Template_input_click_4_listener","_onInputClick","MatSlideToggle_Template_span_cdkObserveContent_11_listener","_onLabelTextChange","_r4","inputId","textContent","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","MatSlideToggleRequiredValidator_Factory","ɵMatSlideToggleRequiredValidator_BaseFactory","_MatSlideToggleRequiredValidatorModule","_MatSlideToggleRequiredValidatorModule_Factory","MatSlideToggleModule","MatSlideToggleModule_Factory","matTooltipAnimations","tooltipState","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_overlay","_scrollDispatcher","_viewContainerRef","_ariaDescriber","scrollStrategy","_defaultOptions","_position","_disabled","_viewInitialized","_pointerExitEventsInitialized","touchGestures","_message","_passiveListeners","_destroyed","_isTooltipVisible","hide","runOutsideAngular","addEventListener","_setupPointerEnterEventsIfNeeded","origin","show","clearTimeout","_touchstartTimeout","_overlayRef","dispose","_tooltipInstance","removeEventListener","listener","removeDescription","message","delay","_showTimeoutId","_hideTimeoutId","_createOverlay","_detach","_portal","TooltipComponent","attach","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","_updatePosition","detachments","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","Object","assign","main","fallback","isLtr","originPosition","_invertPosition","x","y","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","setTimeout","_addListeners","exitListeners","touchendListener","listeners","IOS","ANDROID","gestures","element","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","observe","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","_animationDone","tmp_0_0","currVal_0","pipes","MatTooltipModule","MatTooltipModule_Factory","entryComponents"],"mappings":"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","file":"default~pages-notification-notification-module~pages-sub-admin-sub-admin-module~pages-users-users-module-es5.js","sourcesContent":["import { NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((breakpointStates) => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map((nextMql) => ({ query, matches: nextMql.matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map((query) => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { CommonModule } from '@angular/common';\nimport { ɵɵdefineInjectable, Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r6 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r6);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r6, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(2); return ctx_r7._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r3.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r3.pageSize)(\"disabled\", ctx_r3.disabled)(\"aria-label\", ctx_r3._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r3._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r0._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r1._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r1._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r1._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r1._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r2._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r2._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r2._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r2._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\nMatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/** @docs-private */\nclass MatPaginatorBase {\n}\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() { return this._pageIndex; }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() { return this._length; }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() { return this._pageSize; }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() { return this._hidePageSize; }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener() { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener() { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Inject, Self, Attribute, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MAT_FORM_FIELD, MatFormFieldModule } from '@angular/material/form-field';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/overlay';\nimport * as ɵngcc7 from '@angular/common';\nimport * as ɵngcc8 from '@angular/material/form-field';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_ng_content_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_ng_content_2_Template, 1, 0, \"ng-content\", 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r3.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r4._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r4._transformOrigin)(\"font-size\", ctx_r4._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r4.panelClass)(\"@transformPanel\", ctx_r4.multiple ? \"showing-multiple\" : \"showing\");\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r4.id + \"-panel\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nclass MatSelectBase {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger',\n                providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }]\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Whether filling out the select is required in the form. */\n        this._required = false;\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** Whether the component is in multiple selection mode. */\n        this._multiple = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** The IDs of child options to be passed to the aria-owns attribute. */\n        this._optionIds = '';\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /** Whether the component is disabling centering of the active option over the trigger. */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        /** Aria label of the select. If not specified, the placeholder will be used as label. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() { return this._placeholder; }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (newValue !== this._value) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() { return this._id; }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        });\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n        this._setOptionIds();\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Records option IDs to pass to the aria-owns property. */\n    _setOptionIds() {\n        this._optionIds = this.options.map(option => option.id).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollActiveOptionIntoView() {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the index of the provided option in the option list. */\n    _getOptionIndex(option) {\n        return this.options.reduce((result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }, undefined);\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset = this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0]);\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /** Returns the aria-label of the select component. */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /** Returns the aria-labelledby of the select component. */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_SELECT_TRIGGER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler() { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener() { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 11, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener() { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener() { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener() { return ctx.close(); });\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r0)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc6.CdkOverlayOrigin, ɵngcc7.NgSwitch, ɵngcc7.NgSwitchCase, ɵngcc6.CdkConnectedOverlay, ɵngcc7.NgSwitchDefault, ɵngcc7.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MAT_SELECT_TRIGGER,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc8.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MAT_SELECT_TRIGGER]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect, MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [CdkScrollableModule,\n        MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatFormFieldModule,\n                    MatSelect,\n                    MatSelectTrigger,\n                    MatOptionModule,\n                    MatCommonModule\n                ],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { ObserversModule } from '@angular/cdk/observers';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"thumbContainer\"];\nconst _c1 = [\"toggleBar\"];\nconst _c2 = [\"input\"];\nconst _c3 = function () { return { enterDuration: 150 }; };\nconst _c4 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false })\n});\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nclass MatSlideToggleBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Whether the slide-toggle is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            // Only forward focus manually when it was received programmatically or through the\n            // keyboard. We should not do this for mouse/touch focus for two reasons:\n            // 1. It can prevent clicks from landing in Chrome (see #18269).\n            // 2. They're already handled by the wrapping `label` element.\n            if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n                this._inputElement.nativeElement.focus();\n            }\n            else if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) { return new (t || MatSlideToggle)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlideToggle.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlideToggle, selectors: [[\"mat-slide-toggle\"]], viewQuery: function MatSlideToggle_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._thumbBarEl = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, hostAttrs: [1, \"mat-slide-toggle\"], hostVars: 12, hostBindings: function MatSlideToggle_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : 0 - 1)(\"aria-label\", null)(\"aria-labelledby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checked\", ctx.checked)(\"mat-disabled\", ctx.disabled)(\"mat-slide-toggle-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, exportAs: [\"matSlideToggle\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 16, vars: 18, consts: [[1, \"mat-slide-toggle-label\"], [\"label\", \"\"], [1, \"mat-slide-toggle-bar\"], [\"toggleBar\", \"\"], [\"type\", \"checkbox\", \"role\", \"switch\", 1, \"mat-slide-toggle-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"tabIndex\", \"checked\", \"disabled\", \"change\", \"click\"], [\"input\", \"\"], [1, \"mat-slide-toggle-thumb-container\"], [\"thumbContainer\", \"\"], [1, \"mat-slide-toggle-thumb\"], [\"mat-ripple\", \"\", 1, \"mat-slide-toggle-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-slide-toggle-persistent-ripple\"], [1, \"mat-slide-toggle-content\", 3, \"cdkObserveContent\"], [\"labelContent\", \"\"], [2, \"display\", \"none\"]], template: function MatSlideToggle_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MatSlideToggle_Template_input_change_4_listener($event) { return ctx._onChangeEvent($event); })(\"click\", function MatSlideToggle_Template_input_click_4_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6, 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelement(10, \"div\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11, 12);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatSlideToggle_Template_span_cdkObserveContent_11_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(13, \"span\", 13);\n        ɵngcc0.ɵɵtext(14, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r4 = ɵngcc0.ɵɵreference(12);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-slide-toggle-bar-no-side-margin\", !_r4.textContent || !_r4.textContent.trim());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.tabIndex)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"aria-checked\", ctx.checked.toString())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(17, _c3));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer',] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar',] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggle, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { name: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], change: [{\n            type: Output\n        }], toggleChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], _thumbEl: [{\n            type: ViewChild,\n            args: ['thumbContainer']\n        }], _thumbBarEl: [{\n            type: ViewChild,\n            args: ['toggleBar']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = function MatSlideToggleRequiredValidator_Factory(t) { return ɵMatSlideToggleRequiredValidator_BaseFactory(t || MatSlideToggleRequiredValidator); };\nMatSlideToggleRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSlideToggleRequiredValidator, selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatSlideToggleRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatSlideToggleRequiredValidatorModule });\n_MatSlideToggleRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatSlideToggleRequiredValidatorModule_Factory(t) { return new (t || _MatSlideToggleRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatSlideToggleRequiredValidatorModule, { declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatSlideToggleRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSlideToggleModule });\nMatSlideToggleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSlideToggleModule_Factory(t) { return new (t || MatSlideToggleModule)(); }, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSlideToggleModule, { declarations: function () { return [MatSlideToggle]; }, imports: function () { return [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlideToggleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n\n//# sourceMappingURL=slide-toggle.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/** CSS class that will be attached to the overlay panel. */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        /** The default delay in ms before showing the tooltip after show is called */\n        this.showDelay = this._defaultOptions.showDelay;\n        /** The default delay in ms before hiding the tooltip after hide is called */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() { return this._position; }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    this._tooltipInstance.show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() { return this._message; }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() { return this._tooltipClass; }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor.monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !this._tooltipInstance._showTimeoutId && !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        const position = this._overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled || !this.message || !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners\n                .push(['mouseenter', () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                }]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners\n                .push(['touchstart', () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                }]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    style.MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], hostAttrs: [1, \"mat-tooltip-trigger\"], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip',\n                host: {\n                    'class': 'mat-tooltip-trigger'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent {\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler() { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener() { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ], MatCommonModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip, TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map"]}