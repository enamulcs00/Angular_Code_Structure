{"version":3,"sources":["./node_modules/ng-otp-input/__ivy_ngcc__/fesm2015/ng-otp-input.js","./src/app/authentication/404/not-found.component.ts","./src/app/authentication/404/not-found.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.routing.ts","./src/app/authentication/changepwd/changepwd.component.ts","./src/app/authentication/changepwd/changepwd.component.html","./src/app/authentication/forgotpwd/forgotpwd.component.ts","./src/app/authentication/forgotpwd/forgotpwd.component.html","./src/app/authentication/lock/lock.component.ts","./src/app/authentication/lock/lock.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/login2/login2.component.ts","./src/app/authentication/login2/login2.component.html","./src/app/authentication/otp/otp.component.ts","./src/app/authentication/otp/otp.component.html","./src/app/authentication/resetpwd/resetpwd.component.ts","./src/app/authentication/resetpwd/resetpwd.component.html","./src/app/authentication/rest/rest.component.ts","./src/app/authentication/rest/rest.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/authentication/signup2/signup2.component.ts","./src/app/authentication/signup2/signup2.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyH;AAC/B;AAC3C;;AAEP;AACE;AACD;;AAEzC,8DAA8D;AAC9D,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,kGAAkG,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,IAAI,iCAAiC,EAAE,+FAA+F,CAAC,2DAAoB,MAAM,wBAAwB,gBAAgB,2DAAoB,IAAI,qCAAqC,EAAE;AAC9b,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,CAAC;AACD,sDAAsD;AACtD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,oEAA6B;AACjC,IAAI,oEAA6B;AACjC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,YAAY,yDAAkB;AACnD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,8CAA8C,8BAA8B;AAC5E,iBAAiB,0DAAmB,EAAE,2CAA2C;AACjF,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,kDAAI;AAClB;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wDAAS,GAAG;AACvC,2BAA2B,4BAA4B;AACvD,oEAAoE,0DAAW;AAC/E;AACA;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,GAAG,GAAG,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,uCAAuC,+DAAwB,YAAY;AAC/I,2BAA2B,+DAAwB,EAAE,oEAAoE,mBAAmB,YAAY,iCAAiC,ihBAAihB;AAC1sB,QAAQ,wDAAiB;AACzB,KAAK;AACL,QAAQ,wDAAiB;AACzB,KAAK,EAAE,2BAA2B,SAAS,oDAAW,EAAE,uDAAc,EAAE,uDAAc,EAAE,mEAA2B,uBAAuB,iEAAyB,EAAE,+DAAuB,EAAE,8DAAsB,EAAE,mEAA2B,EAAE,EAAE,sBAAsB,mBAAmB,EAAE,0CAA0C,WAAW,YAAY,kBAAkB,yBAAyB,kBAAkB,eAAe,6EAA6E,iBAAiB,qCAAqC,8BAA8B,WAAW,eAAe,aAAa,qCAAqC,8BAA8B,WAAW,eAAe,aAAa,IAAI;AACnuB;AACA,UAAU;AACV;AACA,oCAAoC,6CAA6C;AACjF,IAAI;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA,WAAW,wBAAwB,6CAA6C,GAAG;AACnF;AACA,cAAc,OAAO,mDAAK,EAAE;AAC5B,qBAAqB,OAAO,oDAAM,E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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { Pipe, EventEmitter, Component, Input, Output, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { FormGroup, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgOtpInputComponent_div_0_input_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 3);\n    ɵngcc0.ɵɵlistener(\"keydown\", function NgOtpInputComponent_div_0_input_1_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onKeyDown($event); })(\"keyup\", function NgOtpInputComponent_div_0_input_1_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const i_r3 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); return ctx_r6.onKeyUp($event, i_r3); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"otp-input \", ctx_r1.config.inputClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate2(\"id\", \"otp_\", i_r3, \"_\", ctx_r1.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"pattern\", ctx_r1.config.allowNumbersOnly ? \"\\\\d*\" : \"\")(\"type\", ctx_r1.inputType)(\"placeholder\", (ctx_r1.config == null ? null : ctx_r1.config.placeholder) || \"\")(\"disabledNumberOnly\", !ctx_r1.config.allowNumbersOnly)(\"ngStyle\", ctx_r1.config.inputStyles)(\"formControl\", ctx_r1.otpForm.controls[item_r2]);\n} }\nfunction NgOtpInputComponent_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgOtpInputComponent_div_0_input_1_Template, 1, 11, \"input\", 2);\n    ɵngcc0.ɵɵpipe(2, \"keys\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"wrapper \", ctx_r0.config.containerClass, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"c_\", ctx_r0.componentKey, \"\");\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r0.config.containerStyles);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind1(2, 6, ctx_r0.otpForm == null ? null : ctx_r0.otpForm.controls));\n} }\nclass KeysPipe {\r\n    transform(value) {\r\n        return Object.keys(value);\r\n    }\r\n}\nKeysPipe.ɵfac = function KeysPipe_Factory(t) { return new (t || KeysPipe)(); };\nKeysPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"keys\", type: KeysPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KeysPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'keys'\n            }]\n    }], null, null); })();\n\nclass Config {\r\n}\n\nclass NgOtpInputComponent {\r\n    constructor(keysPipe) {\r\n        this.keysPipe = keysPipe;\r\n        this.config = { length: 4 };\r\n        // tslint:disable-next-line: no-output-on-prefix\r\n        this.onInputChange = new EventEmitter();\r\n        this.inputControls = new Array(this.config.length);\r\n        this.componentKey = Math.random()\r\n            .toString(36)\r\n            .substring(2) + new Date().getTime().toString(36);\r\n    }\r\n    ngOnInit() {\r\n        this.otpForm = new FormGroup({});\r\n        for (let index = 0; index < this.config.length; index++) {\r\n            this.otpForm.addControl(this.getControlName(index), new FormControl());\r\n        }\r\n        this.inputType = this.getInputType();\r\n    }\r\n    ngAfterViewInit() {\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            if (containerItem) {\r\n                containerItem.addEventListener('paste', (evt) => this.handlePaste(evt));\r\n                const ele = containerItem.getElementsByClassName('otp-input')[0];\r\n                if (ele && ele.focus) {\r\n                    ele.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getControlName(idx) {\r\n        return `ctrl_${idx}`;\r\n    }\r\n    ifLeftArrow(event) {\r\n        return this.ifKeyCode(event, 37);\r\n    }\r\n    ifRightArrow(event) {\r\n        return this.ifKeyCode(event, 39);\r\n    }\r\n    ifBackspaceOrDelete(event) {\r\n        return (event.key === 'Backspace' ||\r\n            event.key === 'Delete' ||\r\n            this.ifKeyCode(event, 8) ||\r\n            this.ifKeyCode(event, 46));\r\n    }\r\n    ifKeyCode(event, targetCode) {\r\n        const key = event.keyCode || event.charCode;\r\n        // tslint:disable-next-line: triple-equals\r\n        return key == targetCode ? true : false;\r\n    }\r\n    onKeyDown($event) {\r\n        var isSpace = this.ifKeyCode($event, 32);\r\n        if (isSpace) { // prevent space\r\n            return false;\r\n        }\r\n    }\r\n    onKeyUp($event, inputIdx) {\r\n        const nextInputId = this.appendKey(`otp_${inputIdx + 1}`);\r\n        const prevInputId = this.appendKey(`otp_${inputIdx - 1}`);\r\n        if (this.ifRightArrow($event)) {\r\n            this.setSelected(nextInputId);\r\n            return;\r\n        }\r\n        if (this.ifLeftArrow($event)) {\r\n            this.setSelected(prevInputId);\r\n            return;\r\n        }\r\n        const isBackspace = this.ifBackspaceOrDelete($event);\r\n        if (isBackspace && !$event.target.value) {\r\n            this.setSelected(prevInputId);\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        if (!$event.target.value) {\r\n            return;\r\n        }\r\n        if (this.ifValidEntry($event)) {\r\n            this.setSelected(nextInputId);\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    appendKey(id) {\r\n        return `${id}_${this.componentKey}`;\r\n    }\r\n    setSelected(eleId) {\r\n        this.focusTo(eleId);\r\n        const ele = document.getElementById(eleId);\r\n        if (ele && ele.setSelectionRange) {\r\n            setTimeout(() => {\r\n                ele.setSelectionRange(0, 1);\r\n            }, 0);\r\n        }\r\n    }\r\n    ifValidEntry(event) {\r\n        const inp = String.fromCharCode(event.keyCode);\r\n        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        return (isMobile ||\r\n            /[a-zA-Z0-9-_]/.test(inp) ||\r\n            (this.config.allowKeyCodes &&\r\n                this.config.allowKeyCodes.includes(event.keyCode)) ||\r\n            (event.keyCode >= 96 && event.keyCode <= 105));\r\n    }\r\n    focusTo(eleId) {\r\n        const ele = document.getElementById(eleId);\r\n        if (ele) {\r\n            ele.focus();\r\n        }\r\n    }\r\n    // method to set component value\r\n    setValue(value) {\r\n        if (this.config.allowNumbersOnly && isNaN(value)) {\r\n            return;\r\n        }\r\n        this.otpForm.reset();\r\n        if (!value) {\r\n            this.rebuildValue();\r\n            return;\r\n        }\r\n        value = value.toString().replace(/\\s/g, ''); // remove whitespace\r\n        Array.from(value).forEach((c, idx) => {\r\n            if (this.otpForm.get(this.getControlName(idx))) {\r\n                this.otpForm.get(this.getControlName(idx)).setValue(c);\r\n            }\r\n        });\r\n        if (!this.config.disableAutoFocus) {\r\n            const containerItem = document.getElementById(`c_${this.componentKey}`);\r\n            var indexOfElementToFocus = value.length < this.config.length ? value.length : (this.config.length - 1);\r\n            let ele = containerItem.getElementsByClassName('otp-input')[indexOfElementToFocus];\r\n            if (ele && ele.focus) {\r\n                ele.focus();\r\n            }\r\n        }\r\n        this.rebuildValue();\r\n    }\r\n    rebuildValue() {\r\n        let val = '';\r\n        this.keysPipe.transform(this.otpForm.controls).forEach(k => {\r\n            if (this.otpForm.controls[k].value) {\r\n                let ctrlVal = this.otpForm.controls[k].value;\r\n                val += ctrlVal[0];\r\n                if (ctrlVal.length > 1) // fix bug #49\r\n                    this.otpForm.controls[k].patchValue(ctrlVal[0]);\r\n            }\r\n        });\r\n        this.onInputChange.emit(val);\r\n    }\r\n    getInputType() {\r\n        return this.config.isPasswordInput\r\n            ? 'password'\r\n            : this.config.allowNumbersOnly\r\n                ? 'tel'\r\n                : 'text';\r\n    }\r\n    handlePaste(e) {\r\n        // Get pasted data via clipboard API\r\n        let clipboardData = e.clipboardData || window['clipboardData'];\r\n        if (clipboardData) {\r\n            var pastedData = clipboardData.getData('Text');\r\n        }\r\n        // Stop data actually being pasted into div\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        if (!pastedData) {\r\n            return;\r\n        }\r\n        this.setValue(pastedData);\r\n    }\r\n}\nNgOtpInputComponent.ɵfac = function NgOtpInputComponent_Factory(t) { return new (t || NgOtpInputComponent)(ɵngcc0.ɵɵdirectiveInject(KeysPipe)); };\nNgOtpInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgOtpInputComponent, selectors: [[\"ng-otp-input\"]], inputs: { config: \"config\" }, outputs: { onInputChange: \"onInputChange\" }, decls: 1, vars: 1, consts: [[3, \"class\", \"id\", \"ngStyle\", 4, \"ngIf\"], [3, \"id\", \"ngStyle\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"class\", \"formControl\", \"id\", \"keydown\", \"keyup\", 4, \"ngFor\", \"ngForOf\"], [\"numberOnly\", \"\", \"maxlength\", \"1\", \"autocomplete\", \"off\", 3, \"pattern\", \"type\", \"placeholder\", \"disabledNumberOnly\", \"ngStyle\", \"formControl\", \"id\", \"keydown\", \"keyup\"]], template: function NgOtpInputComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgOtpInputComponent_div_0_Template, 3, 8, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.otpForm == null ? null : ctx.otpForm.controls);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf, ɵngcc2.DefaultValueAccessor, NumberOnlyDirective, ɵngcc2.MaxLengthValidator, ɵngcc2.PatternValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective]; }, pipes: function () { return [KeysPipe]; }, styles: [\".otp-input[_ngcontent-%COMP%]{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper[_ngcontent-%COMP%]   .otp-input[_ngcontent-%COMP%]:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input[_ngcontent-%COMP%]{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input[_ngcontent-%COMP%]{width:30px;font-size:18px;height:30px}}\"] });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNgOtpInputComponent.ctorParameters = () => [\r\n    { type: KeysPipe }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNgOtpInputComponent.propDecorators = {\r\n    config: [{ type: Input }],\r\n    onInputChange: [{ type: Output }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'ng-otp-input',\n                template: \"<div class=\\\"wrapper {{config.containerClass}}\\\" id=\\\"c_{{componentKey}}\\\" *ngIf=\\\"otpForm?.controls\\\"\\r\\n  [ngStyle]=\\\"config.containerStyles\\\">\\r\\n  <input [pattern]=\\\"config.allowNumbersOnly ? '\\\\\\\\d*' : ''\\\" [type]=\\\"inputType\\\" numberOnly [placeholder]=\\\"config?.placeholder || ''\\\"\\r\\n    [disabledNumberOnly]=\\\"!config.allowNumbersOnly\\\" [ngStyle]=\\\"config.inputStyles\\\" maxlength=\\\"1\\\"\\r\\n    class=\\\"otp-input {{config.inputClass}}\\\" autocomplete=\\\"off\\\" *ngFor=\\\"let item of otpForm?.controls | keys;let i=index\\\"\\r\\n    [formControl]=\\\"otpForm.controls[item]\\\" id=\\\"otp_{{i}}_{{componentKey}}\\\" (keydown)=\\\"onKeyDown($event)\\\"\\r\\n    (keyup)=\\\"onKeyUp($event,i)\\\">\\r\\n</div>\",\n                styles: [\".otp-input{width:50px;height:50px;border-radius:4px;border:solid 1px #c5c5c5;text-align:center;font-size:32px}.wrapper .otp-input:not(:last-child){margin-right:8px}@media screen and (max-width: 767px){.otp-input{width:40px;font-size:24px;height:40px}}@media screen and (max-width: 420px){.otp-input{width:30px;font-size:18px;height:30px}}\\n\"]\n            }]\n    }], function () { return [{ type: KeysPipe }]; }, { config: [{\n            type: Input\n        }], onInputChange: [{\n            type: Output\n        }] }); })();\n\nclass NumberOnlyDirective {\r\n    constructor(_elRef, _renderer) {\r\n        this._elRef = _elRef;\r\n        this._renderer = _renderer;\r\n    }\r\n    ngOnInit() {\r\n        if (!this.disabledNumberOnly) {\r\n            this._renderer.setAttribute(this._elRef.nativeElement, 'onkeypress', 'return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 0');\r\n        }\r\n    }\r\n}\nNumberOnlyDirective.ɵfac = function NumberOnlyDirective_Factory(t) { return new (t || NumberOnlyDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nNumberOnlyDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NumberOnlyDirective, selectors: [[\"\", \"numberOnly\", \"\"]], inputs: { disabledNumberOnly: \"disabledNumberOnly\" } });\r\n/**\r\n * @type {function(): !Array<(null|{\r\n *   type: ?,\r\n *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),\r\n * })>}\r\n * @nocollapse\r\n */\r\nNumberOnlyDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 }\r\n];\r\n/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\r\nNumberOnlyDirective.propDecorators = {\r\n    disabledNumberOnly: [{ type: Input }]\r\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NumberOnlyDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[numberOnly]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { disabledNumberOnly: [{\n            type: Input\n        }] }); })();\n\nclass NgOtpInputModule {\r\n}\nNgOtpInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgOtpInputModule });\nNgOtpInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgOtpInputModule_Factory(t) { return new (t || NgOtpInputModule)(); }, providers: [KeysPipe], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgOtpInputModule, { declarations: function () { return [NgOtpInputComponent, KeysPipe, NumberOnlyDirective]; }, imports: function () { return [CommonModule,\n        FormsModule,\n        ReactiveFormsModule]; }, exports: function () { return [NgOtpInputComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgOtpInputModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule\n                ],\n                declarations: [NgOtpInputComponent, KeysPipe, NumberOnlyDirective],\n                exports: [NgOtpInputComponent],\n                providers: [KeysPipe]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ng-otp-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgOtpInputComponent, NgOtpInputModule, KeysPipe as ɵa, NumberOnlyDirective as ɵb };\n\n//# sourceMappingURL=ng-otp-input.js.map","import { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements AfterViewInit {\r\n  ngAfterViewInit() {\r\n    $(function() {\r\n      $('.preloader').fadeOut();\r\n    });\r\n  }\r\n}\r\n","<div class=\"error-box\">\r\n    <div class=\"error-body text-center\">\r\n        <h1>404</h1>\r\n        <h3 class=\"text-uppercase\">Page Not Found !</h3>\r\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n        <a class=\"btn btn-info btn-rounded waves-effect waves-light m-b-40\" [routerLink]=\"['/dashboard/dashboard']\">Back to home</a>\r\n    </div>\r\n    <footer class=\"footer text-center\">© 2017 Monster Admin.</footer>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\nimport { NgOtpInputModule } from  'ng-otp-input';\r\n\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NotFoundComponent } from './404/not-found.component';\r\nimport { LockComponent } from './lock/lock.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\n\r\nimport { AuthenticationRoutes } from './authentication.routing';\r\nimport { ForgotpwdComponent } from './forgotpwd/forgotpwd.component';\r\nimport { ResetpwdComponent } from './resetpwd/resetpwd.component';\r\nimport { RestComponent } from './rest/rest.component';\r\nimport{OtpComponent} from './otp/otp.component';\r\nimport { ChangepwdComponent } from './changepwd/changepwd.component'\r\n// import { NgxOtpInputModule } from 'ngx-otp-input';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthenticationRoutes),\r\n    NgbModule,\r\n    FormsModule,\r\n  \r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    NgOtpInputModule\r\n\r\n  ],\r\n  declarations: [\r\n    NotFoundComponent,\r\n    LoginComponent,\r\n  \r\n    SignupComponent,\r\n    LockComponent,\r\n    OtpComponent,\r\n    Login2Component,\r\n    Signup2Component,\r\n    ForgotpwdComponent,\r\n\r\n    ResetpwdComponent,\r\n\r\n    ChangepwdComponent\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { NotFoundComponent } from './404/not-found.component';\r\nimport { LockComponent } from './lock/lock.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\nimport { ForgotpwdComponent } from './forgotpwd/forgotpwd.component';\r\nimport { ResetpwdComponent } from './resetpwd/resetpwd.component';\r\nimport { RestComponent } from './rest/rest.component';\r\nimport{OtpComponent} from './otp/otp.component'\r\nimport { ChangepwdComponent } from './changepwd/changepwd.component'\r\nimport {AuthGuard} from '../service/auth-guard/auth.guard'\r\n\r\nexport const AuthenticationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '404',\r\n        component: NotFoundComponent\r\n      },\r\n      {\r\n        path: 'lock',\r\n        component: LockComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n\r\n        component: LoginComponent,\r\n          //  canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'otp',\r\n\r\n        component: OtpComponent,\r\n          //  canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'changepwd',\r\n\r\n        component: ChangepwdComponent,\r\n          //  canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'reset',\r\n\r\n        component: RestComponent,\r\n          //  canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'forgotpwd',\r\n        component: ForgotpwdComponent,\r\n          // canActivate: [AuthGuard],\r\n      },\r\n    \r\n      {\r\n        path: 'login2',\r\n        component: Login2Component\r\n      },\r\n      {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n      },\r\n      {\r\n        path: 'signup2',\r\n        component: Signup2Component\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { FormBuilder, FormGroup, Validators,ValidationErrors, ValidatorFn} from '@angular/forms';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ApiService } from '../../service/api.service';\nimport { CommonService } from '../../service/common.service';\nimport { OtpComponent } from '../otp/otp.component';\n\n@Component({\n  selector: 'app-changepwd',\n  templateUrl: './changepwd.component.html',\n  styleUrls: ['./changepwd.component.css']\n})\nexport class ChangepwdComponent implements OnInit {\n  changePwdForm: FormGroup;\n  isSubmitted:boolean=false\n\n  constructor(public router: Router, private http:HttpClient, private dialog:MatDialog, private fb:FormBuilder, private _apiService:ApiService, private _commService:CommonService) { }\n\n  ngOnInit(): void {\n    this.changePwdForm=this.fb.group({\n      password:[\"\",[Validators.required, Validators.minLength(8)]],\n       confirmpassword:[\"\", [Validators.required ]]\n       \n\n    \n      },\n      {\n        validator: this._commService.MustMatch(\n          \"password\",\n          \"confirmpassword\"\n        ),\n      }\n      \n      )\n  }\n  updatePwd(){\n    this.isSubmitted=true\n    if(this.isSubmitted && this.changePwdForm.valid){\n      const obj={\n        \"password\":this.changePwdForm.value.password,\n      }\n      this._apiService.postRequest('api/v1/admin/setPassword', obj).subscribe((response:any) => {\n        localStorage.clear()\n      this._commService.successMsg(response.message);\n       this.router.navigate(['/authentication/login']);\n    },(err: any) => {\n      console.log(err);\n       this._commService.errorMsg(\"Invalid\")\n      this._commService.hideSpinner()\n    });\n}\n      \n    }\n  \n\n}\n","\n<div\n  class=\"login-register align-items-center d-flex\"\n  style=\"background-image: url(assets/images/background/login-register.jpg)\"\n>\n  <div class=\"login-box card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"changePwdForm\" class=\"form-horizontal\">\n        <div class=\"form-group\">\n          <div class=\"col-xs-12\">\n            <h3>Change  Password</h3>\n            <!-- <p class=\"text-muted\">\n              Enter your Email and instructions will be sent to you!\n            </p> -->\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-xs-12\">\n            <input\n              class=\"form-control\"\n              type=\"password\"\n              required=\"\"\n              placeholder=\"Password\"\n              formControlName=\"password\"\n            />\n            <mat-error *ngIf=\"  isSubmitted && changePwdForm.controls['password'].hasError('required')\">Password \n              is\n              required</mat-error>\n              <mat-error *ngIf=\"  isSubmitted && changePwdForm.controls['password'].hasError('minlength')\">Minimum length \n                of password should be 8 characters\n                </mat-error>\n          \n          </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"col-xs-12\">\n          <input\n          class=\"form-control\"\n          type=\"password\"\n          required=\"\"\n          placeholder=\" Confirm Password\"\n          formControlName=\"confirmpassword\"\n        />\n        <mat-error *ngIf=\"  isSubmitted && changePwdForm.controls['confirmpassword'].hasError('required')\"> Confirm Password \n            is\n            required</mat-error>\n            <mat-error *ngIf=\"  isSubmitted && changePwdForm.controls['confirmpassword'].hasError('mustMatch')\"> Confirm Password \n              must match\n              </mat-error>\n        \n        </div>\n          </div>\n        <div class=\"form-group text-center\">\n          <div class=\"col-xs-12\">   <a  (click)=\"updatePwd()\"   class=\" btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\n                text-white \" type=\"submit\" >Reset</a>\n          </div>        \n        </div>\n        <!-- <p class=\"text-center pb-0 mb-0\">\n          <a routerLink=\"/authentication/login\" href=\"javascript:void(0)\">Back to Login</a>\n        </p> -->\n      </form>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormBuilder, FormGroup, Validators,ValidationErrors, ValidatorFn} from '@angular/forms';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ApiService } from '../../service/api.service';\nimport { CommonService } from '../../service/common.service';\nimport { OtpComponent } from '../otp/otp.component';\n// import{OtpComponent} from './otp/otp.component'\n// import{OtpComponent} from './otp/otp.component'\n\n@Component({\n  selector: 'app-forgotpwd',\n  templateUrl: './forgotpwd.component.html',\n  styleUrls: ['./forgotpwd.component.css']\n})\nexport class ForgotpwdComponent implements OnInit {\n  forgotPwdForm: FormGroup;\n  isSubmitted:boolean=false\n\n  constructor(public router: Router, private dialog:MatDialog, private fb:FormBuilder, private _apiService:ApiService, private _commService:CommonService) { }\n\n  ngOnInit(): void {\n    this.forgotPwdForm=this.fb.group({\n      email:[\"\",[Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\n      // password:[\"\", [Validators.required, Validators.minLength(8) ]]\n\n    })\n  }\n  forgotPwd(){\n    this.isSubmitted=true\n    console.log(\"very niceeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\")\n    if(this.isSubmitted && this.forgotPwdForm.valid){\n      this._apiService.postRequest('api/v1/admin/forgotPassword', this.forgotPwdForm.value).subscribe((response:any) => {\n                  localStorage.setItem('email', this.forgotPwdForm.value.email);\n\n                this._commService.successMsg(\"Verification code has been sent to your email\");\n                // this.openDialogs()\n  \n                 this.router.navigate(['/authentication/otp']);\n              \n           \n        \n              },(err: any) => {\n                this._commService.errorMsg(err.error.message)\n                this._commService.hideSpinner()\n              });\n          \n                \n\n    }\n  }\n  openDialogs(): void {\n    const dialogRef = this.dialog.open(OtpComponent, {\n      // width: '100px',\n      data: { }\n    });\n  \n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result,'The dialog was closed');\n      \n    \n    });\n  }\n\n}\n","<div\n  class=\"login-register align-items-center d-flex\"\n  style=\"background-image: url(assets/images/background/login-register.jpg)\"\n>\n  <div class=\"login-box card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"forgotPwdForm\" class=\"form-horizontal\">\n        <div class=\"form-group\">\n          <div class=\"col-xs-12\">\n            <h3>Recover Password</h3>\n            <p class=\"text-muted\">\n              Enter your Email and instructions will be sent to you!\n            </p>\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"col-xs-12\">\n            <input\n              class=\"form-control\"\n              type=\"text\"\n              required=\"\"\n              placeholder=\"Email\"\n              formControlName=\"email\"\n            />\n            <mat-error *ngIf=\"  isSubmitted && forgotPwdForm.controls['email'].hasError('required')\">Email \n              is\n              required</mat-error>\n              <mat-error *ngIf=\"  isSubmitted && forgotPwdForm.controls['email'].hasError('pattern')\"> Valid Email \n                is\n                required</mat-error>\n          \n          </div>\n        </div>\n        <div class=\"form-group text-center\">\n          <div class=\"col-xs-12\">   <a (click)=\"forgotPwd()\"    class=\" btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\n                text-white \" type=\"submit\" >Reset</a>\n          </div>        \n        </div>\n        <p class=\"text-center pb-0 mb-0\">\n          <a routerLink=\"/authentication/login\" href=\"javascript:void(0)\">Back to Login</a>\n        </p>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lock',\r\n  templateUrl: './lock.component.html',\r\n  styleUrls: ['./lock.component.css']\r\n})\r\nexport class LockComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<section id=\"wrapper\">\r\n  <div class=\"login-register\" style=\"background-image:url(../assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-box card\">\r\n      <div class=\"card-body\">\r\n        <form class=\"form-horizontal form-material\" id=\"loginform\" action=\"index.html\">\r\n          <div class=\"form-group\">\r\n            <div class=\"col-xs-12 text-center\">\r\n              <div class=\"user-thumb text-center\">\r\n                <img alt=\"thumbnail\" class=\"img-circle\" width=\"100\" src=\"../assets/images/users/1.jpg\">\r\n                <h3>Genelia</h3>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <div class=\"col-xs-12\">\r\n              <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"password\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group text-center\">\r\n            <div class=\"col-xs-12\">\r\n              <a class=\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\" [routerLink]=\"['/dashboard/dashboard']\">Log In</a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { FormBuilder, FormGroup, Validators,ValidationErrors, ValidatorFn} from '@angular/forms';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '../../service/api.service';\r\nimport { CommonService } from '../../service/common.service';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  isSubmitted:boolean=false\r\n  loginForm:FormGroup\r\n  isChecked:boolean=false\r\n  constructor(public router: Router,private fb:FormBuilder, private _apiService:ApiService, private _commService:CommonService) {\r\n    this.isChecked=false\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm=this.fb.group({\r\n      email:[\"\",[Validators.required, Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      password:[\"\", [Validators.required, Validators.minLength(8) ]]\r\n\r\n    })\r\n    if(sessionStorage.getItem(\"rememberMe\")){\r\n      console.log(\"uuuuuuuuuuuuuuuuuuuuuuuuuuuuuuu\")\r\n      // var data = sessionStorage.rememberMe ? JSON.parse(sessionStorage.rememberMe) : ''\r\n       var data=JSON.parse(sessionStorage.getItem(\"rememberMe\"))\r\n      this.loginForm.patchValue({\r\n        email:data.email,\r\n        password:data.password\r\n\r\n      })\r\n      this.isChecked=true\r\n    }\r\n  //  this.clickbtn();\r\n  }\r\n\r\n//   ngAfterViewInit() {\r\n//     $(function() {\r\n//             $(\".preloader\").fadeOut();\r\n//         });\r\n//         $('#to-recover').on(\"click\", function() {\r\n//             $(\"#loginform\").slideUp();\r\n//             $(\"#recoverform\").fadeIn();\r\n//         });\r\n//   }\r\n\r\n\r\n\r\n//   onLoggedin() {\r\n//     localStorage.setItem('isLoggedin', 'true');\r\n//   }\r\n// clickbtn(){\r\n//   var forgetpws = document.getElementById(\"to-recover\"); \r\n//   var recoverform = document.getElementById(\"recoverform\"); \r\n//   var login = document.getElementById(\"loginform\"); \r\n//   var resetpw = document.getElementById(\"resetpwd\"); \r\n \r\n//   forgetpws.addEventListener(\"click\" ,()=>{\r\n//     recoverform.classList.add(\"d-block\");\r\n//     login.classList.add('d-none');\r\n//     login.classList.remove('d-block');\r\n//   })\r\n//   resetpw.addEventListener(\"click\" ,()=>{\r\n//     recoverform.classList.remove(\"d-block\")\r\n//     recoverform.classList.add(\"d-none\");\r\n//     login.classList.add('d-block');\r\n//   })\r\n// }\r\nonLoggedin(){\r\n  console.log(\"ooooooooooooooooooooooooooo\");\r\n  \r\n  this.isSubmitted=true\r\n  if(this.loginForm.valid && this.isSubmitted==true){\r\n    const loginDetails={\r\n      email:this.loginForm.value.email,\r\n      password:this.loginForm.value.password\r\n\r\n    }\r\n    this._apiService.postRequest('api/v1/admin/login', this.loginForm.value).subscribe(response => {\r\n      localStorage.clear();\r\n      console.log(\"response\",response)\r\n      const user = response['data'];\r\n            localStorage.setItem(\"accessToken\", JSON.stringify(user.token));\r\n            localStorage.setItem('user', JSON.stringify(user)); \r\n           \r\n              this.router.navigate(['/dashboard/dashboard']);\r\n         \r\n              this._commService.successMsg(\"Login Successful\") \r\n            },(err: any) => {\r\n              this._commService.errorMsg(err.error.message)\r\n              this._commService.hideSpinner()\r\n            });\r\n        \r\n              \r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\nremember(event){\r\n  console.log(\"pppppppppppppppppppppppppppppppppppppppppppppp\");\r\n  \r\n  if(event.target.checked && this.loginForm.valid){\r\n    console.log(\"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\r\n    \r\n    sessionStorage.setItem(\"rememberMe\", JSON.stringify(this.loginForm.value))\r\n  }\r\n  else{\r\n    console.log(\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\");\r\n    \r\n    sessionStorage.removeItem(\"rememberMe\")\r\n \r\n    //  this.loginForm.reset()\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n","<div class=\"login-register align-items-center d-flex\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n  <div class=\"login-box  card\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"loginForm\"  class=\"form-horizontal form-material\" id=\"loginform\">\r\n        <h3 class=\"box-title m-b-20\">Sign In</h3>\r\n        <div class=\"form-group \">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" type=\"text\"  placeholder=\"Email\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"  isSubmitted && loginForm.controls['email'].hasError('required')\">Email \r\n              is\r\n              required</mat-error>\r\n              <mat-error *ngIf=\"  isSubmitted && loginForm.controls['email'].hasError('pattern')\"> Valid Email \r\n                is\r\n                required</mat-error> \r\n              </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" type=\"password\"  placeholder=\"Password\" formControlName=\"password\">\r\n            <mat-error *ngIf=\"  isSubmitted && loginForm.controls['password'].hasError('required')\">Password \r\n              is\r\n              required</mat-error> \r\n              <mat-error *ngIf=\"  isSubmitted && loginForm.controls['password'].hasError('minlength')\">Minimum length of Password \r\n                should be 8 characters\r\n              </mat-error> </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-md-12 font-14\">\r\n            <div class=\"checkbox checkbox-primary pull-left p-t-0\">\r\n              <input id=\"checkbox-signup\" type=\"checkbox\"  [checked]=\"isChecked\" (change)=\"remember($event)\">\r\n              <label for=\"checkbox-signup \" class=\"ml-2\"> Remember me </label>\r\n            </div>\r\n            <a routerLink=\"/authentication/forgotpwd\" id=\"to-recover\" class=\"text-dark pull-right\">\r\n              <!-- <i class=\"fa fa-lock m-r-5\"></i> -->Forgot Password?</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <button class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" \r\n              (click)=\"onLoggedin()\">Log In</button>\r\n          </div>\r\n        </div>\r\n        <!-- <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n            <div class=\"social\">\r\n              <a href=\"javascript:void(0)\" class=\"btn btn-facebook\" placement=\"top\" ngbTooltip=\"Login with Facebook\">\r\n                <i aria-hidden=\"true\" class=\"fa fa-facebook\"></i>\r\n              </a>\r\n              <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" placement=\"top\" ngbTooltip=\"Login with Google\">\r\n                <i aria-hidden=\"true\" class=\"fa fa-google-plus\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n        <!-- <div class=\"form-group m-b-0\">\r\n          <div class=\"col-sm-12 text-center\">\r\n            <div>Don't have an account?\r\n              <a class=\"text-info m-l-5\" [routerLink]=\"['/authentication/signup']\">\r\n                <b>Sign Up</b>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div> -->\r\n      </form>\r\n      <form class=\"form-horizontal\" id=\"recoverform\" action=\"index.html\">\r\n        <div class=\"form-group \">\r\n          <div class=\"col-xs-12\">\r\n            <h3>Recover Password</h3>\r\n            <p class=\"text-muted\">Enter your Email and instructions will be sent to you! </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group \">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Email\"> </div>\r\n        </div>\r\n        <div class=\"form-group text-center m-t-20\">\r\n          <div class=\"col-xs-12\">\r\n            <a class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" id=\"resetpwd\" [routerLink]=\"['/login']\">Reset</a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\ndeclare var $:any;\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login2.component.html',\r\n  styleUrls: ['./login2.component.css']\r\n})\r\nexport class Login2Component implements OnInit, AfterViewInit {\r\n  constructor(public router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    $(function() {\r\n      $('.preloader').fadeOut();\r\n    });\r\n    $('#to-recover').on('click', function() {\r\n      $('#loginform').slideUp();\r\n      $('#recoverform').fadeIn();\r\n    });\r\n  }\r\n}\r\n","<section id=\"wrapper\" class=\"login-register login-sidebar\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-box card\">\r\n        <div class=\"card-body\">\r\n            <form class=\"form-horizontal form-material\" id=\"loginform\" action=\"index.html\">\r\n                <a href=\"javascript:void(0)\" class=\"text-center db\">\r\n                    <img src=\"../assets/images/logo-icon.png\" alt=\"Home\" />\r\n                    <br/>\r\n                    <img src=\"../assets/images/logo-text.png\" alt=\"Home\" />\r\n                </a>\r\n                <div class=\"form-group m-t-40\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Username\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"Password\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"checkbox checkbox-primary pull-left p-t-0\">\r\n                            <input id=\"checkbox-signup\" type=\"checkbox\">\r\n                            <label for=\"checkbox-signup\"> Remember me </label>\r\n                        </div>\r\n                        <a href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark pull-right\">\r\n                            <i class=\"fa fa-lock m-r-5\"></i> Forgot Password?</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <a class=\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\" [routerLink]=\"['/dashboard/dashboard']\">Log In</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                        <div class=\"social\">\r\n                            <a href=\"javascript:void(0)\" class=\"btn btn-facebook\" placement=\"top\" ngbTooltip=\"Login with Facebook\">\r\n                                <i aria-hidden=\"true\" class=\"fa fa-facebook\"></i>\r\n                            </a>\r\n                            <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" placement=\"top\" ngbTooltip=\"Login with Google\">\r\n                                <i aria-hidden=\"true\" class=\"fa fa-google-plus\"></i>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group m-b-0\">\r\n                    <div class=\"col-sm-12 text-center\">\r\n                        <p>Don't have an account?\r\n                            <a class=\"text-info m-l-5\" [routerLink]=\"['/authentication/signup']\">\r\n                                <b>Sign Up</b>\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <form class=\"form-horizontal\" id=\"recoverform\" action=\"index.html\">\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <h3>Recover Password</h3>\r\n                        <p class=\"text-muted\">Enter your Email and instructions will be sent to you! </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group \">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Email\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <a class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" [routerLink]=\"['/login']\">Reset</a>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { FormBuilder, FormGroup, Validators,ValidationErrors, ValidatorFn} from '@angular/forms';\r\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '../../service/api.service';\r\nimport { CommonService } from '../../service/common.service';\r\n@Component({\r\n  selector: 'app-otp',\r\n  templateUrl: './otp.component.html',\r\n  styleUrls: ['./otp.component.css']\r\n})\r\nexport class OtpComponent implements OnInit {\r\n  a:any\r\n  otpForm:FormGroup\r\n  isSubmitted:boolean=false\r\n\r\n  config = {\r\n    allowNumbersOnly: true,\r\n    length: 4,\r\n    isPasswordInput: false,\r\n    disableAutoFocus: false,\r\n    placeholder: '',\r\n    inputStyles: {\r\n      'width': '50px',\r\n      'height': '50px'\r\n    }\r\n  };\r\n\r\n  message: string;\r\n  otp: any;\r\n  submitted: boolean = false;;\r\n\r\n  constructor(public router: Router,private fb:FormBuilder, private _apiService:ApiService, private _commService:CommonService, private dialog : MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.a=localStorage.getItem('email')\r\n    console.log(\"niceeeeeeeeeeeeeeeee\",this.a);\r\n    \r\n    this.otpForm=this.fb.group({\r\n      otp:[\"\",[Validators.required, Validators.minLength(4)]]\r\n    })\r\n  }\r\n  \r\n  verifyOtp(){\r\n    this.isSubmitted=true\r\n  \r\n      if (this.isSubmitted && this.otpForm.valid){\r\n        const obj={\r\n          \"code\":this.otpForm.value.otp,\r\n          \"email\":localStorage.getItem('email')\r\n  \r\n        }\r\n        this._apiService.postRequest('api/v1/admin/verifyOtp',obj).subscribe((response:any) => {\r\n      \r\n          console.log(\"response\",response)\r\n           localStorage.setItem('passwordToken', response.data);\r\n          this._commService.successMsg(\"Otp Verified Successfully\")\r\n      \r\n          this.router.navigateByUrl('/authentication/changepwd')\r\n          \r\n        \r\n          console.log(\"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\r\n          \r\n        },(err: any) => {\r\n          this._commService.errorMsg(err.error.message)\r\n          this._commService.hideSpinner()\r\n        })\r\n    \r\n        \r\n  \r\n      }\r\n    \r\n    \r\n  }\r\n  phoneNoInput(event) {\r\n    const charCode = event.which ? event.which : event.keyCode;\r\n    if (charCode >= 48 && charCode <= 57) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  // check(event){\r\n  //   if (event.target.value.length==4){\r\n  //     const obj={\r\n  //       \"code\":event.target.value,\r\n  //       \"email\":localStorage.getItem('email')\r\n\r\n  //     }\r\n  //     this._apiService.postRequest('api/v1/admin/verifyOtp',obj).subscribe((response:any) => {\r\n    \r\n  //       console.log(\"response\",response)\r\n  //       localStorage.setItem('passwordToken', response.token);\r\n  //       this._commService.successMsg(response.message)\r\n  //       this.dialog.openDialogs[0].close();\r\n  //       this.router.navigateByUrl('/authentication/changepwd')\r\n        \r\n      \r\n  //       console.log(\"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\r\n        \r\n  //     },(err: any) => {\r\n  //       this._commService.errorMsg(err.error.message)\r\n  //       this._commService.hideSpinner()\r\n  //     })\r\n  \r\n      \r\n\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n\r\n  \r\n\r\n}\r\n","\r\n<!-- \r\n    <div class=\"singin_content recoverpassword verfiy\">\r\n  \r\n        <div class=\"signin_right otp-screen\">\r\n     \r\n            <div class=\"signin_right_inner\">\r\n                <h3 class=\"otp-text\">Enter the 4-digit code</h3>\r\n                <div class=\"input_field\">\r\n                    <form [formGroup]=\"otpForm\" >\r\n                        <ul class=\"signin_form\">\r\n                            <li>\r\n                                <input type=\"text\" placeholder=\"Enter code\" formControlName=\"otp\"   (keypress)=\"phoneNoInput($event)\" maxlength=\"4\"  >\r\n                            </li>\r\n                                <mat-error *ngIf=\"  isSubmitted && otpForm.controls['otp'].hasError('required')\">OTP \r\n                                    is\r\n                                    required</mat-error>\r\n                                    <mat-error *ngIf=\"  isSubmitted && otpForm.controls['otp'].hasError('minlength')\"> Length of \r\n                                        OTP should be 4 digits \r\n                                        \r\n                                        </mat-error>\r\n                             \r\n                        \r\n                        </ul>\r\n\r\n                        <div class=\"signup-btngroup\">\r\n                            <button (click)=\"verifyOtp()\" class=\"btn btn-primary\" >Verify OTP</button>\r\n                          \r\n                            </div>\r\n                      \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    <div class=\"login-register align-items-center d-flex\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n        <div class=\"login-box  card\">\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"otpForm\"  class=\"form-horizontal form-material\" id=\"loginform\">\r\n              <h3 class=\"box-title m-b-20\">Enter the 4 digit code</h3>\r\n              <div class=\"form-group \">\r\n                <div class=\"col-xs-12\">\r\n                  <input class=\"form-control\" type=\"text\"  placeholder=\"Enter code\" formControlName=\"otp\"  (keypress)=\"phoneNoInput($event)\" maxlength=\"4\">\r\n                  <mat-error *ngIf=\"  isSubmitted && otpForm.controls['otp'].hasError('required')\">Otp \r\n                    is\r\n                    required</mat-error>\r\n                    <mat-error *ngIf=\"  isSubmitted && otpForm.controls['otp'].hasError('minlength')\"> Length of \r\n                        OTP should be 4 digits </mat-error> \r\n                    </div>\r\n              </div>\r\n          \r\n            \r\n              <div class=\"form-group text-center m-t-20\">\r\n                <div class=\"col-xs-12\">\r\n                  <button class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" \r\n                    (click)=\"verifyOtp()\">Verify OTP</button>\r\n                </div>\r\n              </div>\r\n\r\n            </form>\r\n      \r\n          </div>\r\n        </div>\r\n      </div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-resetpwd',\n  templateUrl: './resetpwd.component.html',\n  styleUrls: ['./resetpwd.component.css']\n})\nexport class ResetpwdComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>resetpwd works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// import { CommonService } from '../../services/services/common.service';\r\n// import { HttpService } from '../../services/services/http.service';\r\n@Component({\r\n  selector: 'app-rest',\r\n  templateUrl: './rest.component.html',\r\n  styleUrls: ['./rest.component.css']\r\n})\r\nexport class RestComponent implements OnInit {\r\n  form: FormGroup;\r\n  submitted = false;\r\n\r\n  constructor(private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    // this.form = this.formBuilder.group({\r\n    //   password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(15)]],\r\n    //   confirmpassword: ['', [Validators.required,]]\r\n    // },\r\n    //   {\r\n    //     validator: this.cm.MustMatch('password', 'confirmpassword'),\r\n    //   })\r\n  }\r\n\r\n  get f(): { [key: string]: AbstractControl } {\r\n    return this.form.controls;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"login-register align-items-center d-flex\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-box  card\">\r\n      <div class=\"card-body\">\r\n        <form class=\"form-horizontal\" >\r\n          <div class=\"form-group \">\r\n            <div class=\"col-xs-12\">\r\n              <h3>Reset Password</h3>\r\n              <!-- <p class=\"text-muted\">Enter your password and instructions will be sent to you! </p> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <div class=\"col-xs-12\">\r\n              <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"New Password\" formControlName=\"password\" > </div>\r\n              <div *ngIf=\"submitted && f.password.errors\">\r\n                <div class=\"error\" *ngIf=\"f.password.errors.required\">password is required</div>\r\n                <div class=\"error\" *ngIf=\"f.password.errors.minlength\">\r\n                  Password must be at least 8 characters\r\n                </div>\r\n                <div class=\"error\" *ngIf=\"f.password.errors.maxlength\">\r\n                  Password should not be more than 15 characters.\r\n                </div>\r\n                <!-- <div  class=\"error\" *ngIf=\"f.password.errors.pattern\">password is invalid</div> -->\r\n                \r\n               </div>          \r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"col-xs-12\">\r\n                <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"Re-enter Password\" formControlName=\"confirmpassword\" > </div>\r\n                <div *ngIf=\"submitted && f.confirmpassword.errors\">\r\n                  <div class=\"error\" *ngIf=\"f.confirmpassword.errors.required\">Password is required</div>\r\n                  <div class=\"error\" *ngIf=\"f.confirmpassword.errors.mustMatch\"> Confirm\r\n                    Password must match</div>\r\n                  \r\n                 </div> \r\n          </div>\r\n          <div class=\"form-group text-center m-t-20\">\r\n            <div class=\"col-xs-12\">\r\n              <a class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light  text-white\" >Reset</a>\r\n              <a class=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light  text-white\" routerLink=\"/authentication/login\">Back to login</a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"login-register\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n  <div class=\"login-box card\">\r\n    <div class=\"card-body\">\r\n      <form class=\"form-horizontal form-material\" id=\"loginform\">\r\n        <h3 class=\"box-title m-b-20\">Sign Up</h3>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" required=\"\" type=\"text\" placeholder=\"Name\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group \">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" required=\"\" type=\"text\" placeholder=\"Email\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group \">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" required=\"\" type=\"password\" placeholder=\"Password\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"col-xs-12\">\r\n            <input class=\"form-control\" required=\"\" type=\"password\" placeholder=\"Confirm Password\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"checkbox checkbox-success p-t-0\">\r\n              <input id=\"checkbox-signup\" type=\"checkbox\" required=\"\" class=\"filled-in chk-col-light-blue\">\r\n              <label for=\"checkbox-signup\"> I agree to all\r\n                <a href=\"javascript:void(0)\">Terms</a>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group text-center p-b-20\">\r\n          <div class=\"col-xs-12\">\r\n            <a [routerLink]=\"['/authentication/login']\" class=\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\">Sign Up</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group m-b-0\">\r\n          <div class=\"col-sm-12 text-center\">\r\n            Already have an account?\r\n            <a class=\"text-info m-l-5\" [routerLink]=\"['/authentication/login']\">\r\n              <b>Sign In</b>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup2.component.html',\r\n  styleUrls: ['./signup2.component.css']\r\n})\r\nexport class Signup2Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<section id=\"wrapper\" class=\"login-register login-sidebar\" style=\"background-image:url(assets/images/background/login-register.jpg);\">\r\n    <div class=\"login-box card\">\r\n        <div class=\"card-body\">\r\n            <form class=\"form-horizontal form-material\" id=\"loginform\" action=\"index.html\">\r\n                <a href=\"javascript:void(0)\" class=\"text-center db\">\r\n                    <img src=\"../assets/images/logo-icon.png\" alt=\"Home\" />\r\n                    <br/>\r\n                    <img src=\"../assets/images/logo-text.png\" alt=\"Home\" />\r\n                </a>\r\n                <h3 class=\"box-title m-t-40 m-b-0\">Register Now</h3>\r\n                <small>Create your account and enjoy</small>\r\n                <div class=\"form-group m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Name\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"text\" required=\"\" placeholder=\"Email\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"Password\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-xs-12\">\r\n                        <input class=\"form-control\" type=\"password\" required=\"\" placeholder=\"Confirm Password\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-12\">\r\n                        <div class=\"checkbox checkbox-primary p-t-0\">\r\n                            <input id=\"checkbox-signup\" type=\"checkbox\">\r\n                            <label for=\"checkbox-signup\"> I agree to all\r\n                                <a href=\"#\">Terms</a>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group text-center m-t-20\">\r\n                    <div class=\"col-xs-12\">\r\n                        <a [routerLink]=\"['/authentication/login']\" class=\"btn btn-info btn-lg btn-block btn-rounded text-uppercase waves-effect waves-light\">Sign Up</a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group m-b-0\">\r\n                    <div class=\"col-sm-12 text-center\">\r\n                        <p>Already have an account?\r\n                            <a class=\"text-info m-l-5\" [routerLink]=\"['/authentication/login']\">\r\n                                <b>Sign In</b>\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>"],"sourceRoot":"webpack:///"}