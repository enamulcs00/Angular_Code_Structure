{"version":3,"sources":["webpack:///node_modules/@angular/cdk/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///node_modules/@angular/cdk/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/fesm2015/scrolling.js"],"names":["DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","complete","ɵfac","Directionality_Factory","t","ɵprov","token","ctorParameters","type","undefined","decorators","args","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","Dir_Factory","ɵdir","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","inputs","outputs","exportAs","features","provide","useExisting","propDecorators","selector","providers","host","BidiModule","ɵmod","ɵinj","BidiModule_Factory","ngJitMode","declarations","exports","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","nativeElement","DataSource","isDataSource","connect","ArrayDataSource","_data","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","next","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","from","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","UniqueSelectionDispatcher_Factory","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","Object","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","createElement","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","defineProperty","get","normalizePassiveListenerOptions","options","capture","rtlScrollAxisType","supportsScrollBehavior","style","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","scrollLeft","parentNode","removeChild","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","element","rootNode","getRootNode","ShadowRoot","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","pipe","_viewport","_itemSize","_minBufferPx","_maxBufferPx","viewport","_updateTotalContentSize","_updateRenderedRange","index","behavior","scrollToOffset","setTotalContentSize","getDataLength","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","maxVisibleItems","Math","ceil","newVisibleIndex","max","min","floor","startBuffer","expandStart","endBuffer","expandEnd","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","Map","scrollable","set","elementScrolled","subscribe","scrollableReference","unsubscribe","auditTimeInMs","observer","_addGlobalListener","subscription","_removeGlobalListener","_","container","deregister","elementRef","ancestors","getAncestorScrollContainers","scrolled","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","doc","_getDocument","defaultView","scrollableElement","getElementRef","parentElement","runOutsideAngular","_getWindow","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportRuler","_change","_changeListener","event","_updateViewportSize","removeEventListener","_viewportSize","output","scrollPosition","getViewportScrollPosition","documentRect","getBoundingClientRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","run","renderedRangeStream","asObservable","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","EMPTY","checkViewportSize","_measureViewportSize","attach","onContentScrolled","_markChangeDetectionNeeded","detach","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","offset","to","isHorizontal","orientation","axis","axisDirection","transform","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","styles","encapsulation","changeDetection","None","OnPush","getOffset","direction","node","rect","CdkVirtualForOf","_viewContainerRef","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","firstNode","lastNode","i","view","rootNodes","changes","diff","_renderedItems","_updateContext","_applyChanges","destroy","slice","find","create","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","context","_updateComputedContextProperties","detectChanges","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","remove","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","createEmbeddedView","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","CdkScrollableModule","CdkScrollableModule_Factory","ScrollingModule","ScrollingModule_Factory","imports"],"mappings":"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","file":"default~apps-apps-module~authentication-authentication-module~extra-component-extra-component-module~51cebb47-es5.js","sourcesContent":["import { InjectionToken, inject, EventEmitter, ɵɵdefineInjectable, ɵɵinject, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\nDirectionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() { return this._dir; }\n    set dir(value) {\n        const old = this._dir;\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() { return this.dir; }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { isObservable, of, Subject } from 'rxjs';\nimport { ɵɵdefineInjectable, Injectable } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\n/** Checks whether an object is a data source. */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** DataSource wrapper for a native array. */\nclass ArrayDataSource extends DataSource {\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    disconnect() { }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /** Currently-selected values. */\n        this._selection = new Set();\n        /** Keeps track of the deselected options that haven't been emitted by the change event. */\n        this._deselectedToEmit = [];\n        /** Keeps track of the selected options that haven't been emitted by the change event. */\n        this._selectedToEmit = [];\n        /** Event emitted when the value has changed. */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param id ID of the item.\n     * @param name Name of the item.\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @return Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return () => {\n            this._listeners = this._listeners.filter((registered) => {\n                return listener !== registered;\n            });\n        };\n    }\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\nUniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { ɵɵdefineInjectable, ɵɵinject, PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && Intl.v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser && (!!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID)); };\nPlatform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID)); }, token: Platform, providedIn: \"root\" });\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => supportsPassiveEvents = true\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in document.documentElement.style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        scrollContainer.parentNode.removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Optional, Inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The injection token used to specify the virtual scrolling strategy. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Virtual scrolling strategy for lists with items of known fixed size. */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /** @docs-private Implemented as part of VirtualScrollStrategy. */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /** The attached viewport. */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param viewport The viewport to attach this strategy to.\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** Detaches this scroll strategy from the currently attached viewport. */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param itemSize The size of the items in the virtually scrolling list.\n     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onContentRendered() { }\n    /** @docs-private Implemented as part of VirtualScrollStrategy. */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling.\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /** Update the viewport's total content size. */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /** Update the viewport's rendered range. */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        const renderedRange = this._viewport.getRenderedRange();\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        const viewportSize = this._viewport.getViewportSize();\n        const dataLength = this._viewport.getDataLength();\n        let scrollOffset = this._viewport.measureScrollOffset();\n        let firstVisibleIndex = scrollOffset / this._itemSize;\n        // If user scrolls to the bottom of the list and data changes to a smaller list\n        if (newRange.end > dataLength) {\n            // We have to recalculate the first visible index based on new data length and viewport size.\n            const maxVisibleItems = Math.ceil(viewportSize / this._itemSize);\n            const newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems));\n            // If first visible index changed we must update scroll offset to handle start/end buffers\n            // Current range must also be adjusted to cover the new position (bottom of new list).\n            if (firstVisibleIndex != newVisibleIndex) {\n                firstVisibleIndex = newVisibleIndex;\n                scrollOffset = newVisibleIndex * this._itemSize;\n                newRange.start = Math.floor(firstVisibleIndex);\n            }\n            newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));\n        }\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/** A virtual scroll strategy that supports fixed-size items. */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /** The scroll strategy used by this directive. */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /** The size of the items in the list (in pixels). */\n    get itemSize() { return this._itemSize; }\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(() => CdkFixedSizeVirtualScroll)]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the scrolling events by default. */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    constructor(_ngZone, _platform, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n        this._scrolled = new Subject();\n        /** Keeps track of the global `scroll` and `resize` subscriptions. */\n        this._globalSubscription = null;\n        /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n        this._document = document;\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe(() => this._scrolled.next(scrollable)));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable) {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            };\n        });\n    }\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter(target => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementRef) {\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n        return scrollingContainers;\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /** Returns true if the element is contained within the provided Scrollable. */\n    _scrollableContainsElement(scrollable, elementRef) {\n        let element = elementRef.nativeElement;\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = element.parentElement);\n        return false;\n    }\n    /** Sets up the global scroll listeners. */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular(() => {\n            const window = this._getWindow();\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n    /** Cleans up the global scroll listener. */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform), ɵɵinject(DOCUMENT, 8)); }, token: ScrollDispatcher, providedIn: \"root\" });\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((observer) => this.ngZone.runOutsideAngular(() => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)));\n    }\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /** Gets the ElementRef for the viewport. */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options) {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                options.right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                options.left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    _applyScrollToOptions(options) {\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from) {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time in ms to throttle the resize events by default. */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\nclass ViewportRuler {\n    constructor(_platform, ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._platform = _platform;\n        /** Stream of viewport change events. */\n        this._change = new Subject();\n        /** Event listener that will be used to handle the viewport change events. */\n        this._changeListener = (event) => {\n            this._change.next(event);\n        };\n        this._document = document;\n        ngZone.runOutsideAngular(() => {\n            if (_platform.isBrowser) {\n                const window = this._getWindow();\n                // Note that bind the events ourselves, rather than going through something like RxJS's\n                // `fromEvent` so that we can ensure that they're bound outside of the NgZone.\n                window.addEventListener('resize', this._changeListener);\n                window.addEventListener('orientationchange', this._changeListener);\n            }\n            // We don't need to keep track of the subscription,\n            // because we complete the `change` stream on destroy.\n            this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n    ngOnDestroy() {\n        if (this._platform.isBrowser) {\n            const window = this._getWindow();\n            window.removeEventListener('resize', this._changeListener);\n            window.removeEventListener('orientationchange', this._changeListener);\n        }\n        this._change.complete();\n    }\n    /** Returns the viewport's width and height. */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null;\n        }\n        return output;\n    }\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const document = this._getDocument();\n        const window = this._getWindow();\n        const documentElement = document.documentElement;\n        const documentRect = documentElement.getBoundingClientRect();\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /** Updates the cached viewport size. */\n    _updateViewportSize() {\n        const window = this._getWindow();\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone), ɵɵinject(DOCUMENT, 8)); }, token: ViewportRuler, providedIn: \"root\" });\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Checks if the given ranges are equal. */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /** Emits when the viewport is detached from a CdkVirtualForOf. */\n        this._detachedSubject = new Subject();\n        /** Emits when the rendered range changes. */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /** Emits when the index of the first element visible in the viewport changes. */\n        this.scrolledIndexChange = new Observable((observer) => this._scrollStrategy.scrolledIndexChange.subscribe(index => Promise.resolve().then(() => this.ngZone.run(() => observer.next(index)))));\n        /** A stream that emits whenever the rendered range changes. */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /** A string representing the `style.width` property value to be used for the spacer element. */\n        this._totalContentWidth = '';\n        /** A string representing the `style.height` property value to be used for the spacer element. */\n        this._totalContentHeight = '';\n        /** The currently rendered range of indices. */\n        this._renderedRange = { start: 0, end: 0 };\n        /** The length of the data bound to this viewport (in number of items). */\n        this._dataLength = 0;\n        /** The size of the viewport (in pixels). */\n        this._viewportSize = 0;\n        /** The last rendered content offset that was set. */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /** Whether there is a pending change detection cycle. */\n        this._isChangeDetectionPending = false;\n        /** A list of functions to run after the next change detection cycle. */\n        this._runAfterChangeDetection = [];\n        /** Subscription to changes in the viewport size. */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe(() => {\n                this.checkViewportSize();\n            });\n        }\n    }\n    /** The direction the viewport scrolls. */\n    get orientation() {\n        return this._orientation;\n    }\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith(null), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe(() => this._scrollStrategy.onContentScrolled());\n            this._markChangeDetectionNeeded();\n        }));\n    }\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular(() => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe(data => {\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            });\n        });\n    }\n    /** Detaches the current `CdkVirtualForOf`. */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /** Gets the length of the data bound to this viewport (in number of items). */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /** Gets the size of the viewport (in pixels). */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /** Get the current rendered range of items. */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /** Sets the currently rendered range of indices. */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded(() => this._scrollStrategy.onContentRendered());\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        const isHorizontal = this.orientation == 'horizontal';\n        const axis = isHorizontal ? 'X' : 'Y';\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded(() => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            });\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param offset The offset to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param index The index of the element to scroll to.\n     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /** Measure the combined size of all of the rendered items. */\n    measureRenderedContentSize() {\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /** Update the viewport dimensions and re-render. */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /** Measure the viewport size. */\n    _measureViewportSize() {\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /** Queue up change detection to run. */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular(() => Promise.resolve().then(() => {\n                this._doChangeDetection();\n            }));\n        }\n    }\n    /** Run change detection. */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run(() => this._changeDetectorRef.markForCheck());\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /** Calculates the `style.width` and `style.height` for the spacer element. */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Helper to extract the offset of a DOM Node in a certain direction. */\nfunction getOffset(orientation, direction, node) {\n    const el = node;\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    const rect = el.getBoundingClientRect();\n    if (orientation === 'horizontal') {\n        return direction === 'start' ? rect.left : rect.right;\n    }\n    return direction === 'start' ? rect.top : rect.bottom;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n */\nclass CdkVirtualForOf {\n    constructor(\n    /** The view container to add items to. */\n    _viewContainerRef, \n    /** The template to use when stamping out new items. */\n    _template, \n    /** The set of available differs. */\n    _differs, \n    /** The virtual scrolling viewport that these items are being rendered in. */\n    _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /** Emits when the rendered view of the data changes. */\n        this.viewChange = new Subject();\n        /** Subject that emits when a new DataSource instance is given. */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /** Emits whenever the data in the current DataSource changes. */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith(null), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap(([prev, cur]) => this._changeDataSource(prev, cur)), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /** The differ used to calculate changes to the data. */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /** Whether the rendered data should be updated during the next ngDoCheck cycle. */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe(data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        });\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe(range => {\n            this._renderedRange = range;\n            ngZone.run(() => this.viewChange.next(this._renderedRange));\n            this._onRenderedDataChange();\n        });\n        this._viewport.attach(this);\n    }\n    /** The DataSource to display. */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item) :\n            undefined;\n    }\n    /** The template used to stamp out new elements. */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        const rangeLen = range.end - range.start;\n        // Loop over all the views, find the first and land node and compute the size by subtracting\n        // the top of the first node from the bottom of the last one.\n        let firstNode;\n        let lastNode;\n        // Find the first node by starting from the beginning and going forwards.\n        for (let i = 0; i < rangeLen; i++) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                firstNode = lastNode = view.rootNodes[0];\n                break;\n            }\n        }\n        // Find the last node by starting from the end and going backwards.\n        for (let i = rangeLen - 1; i > -1; i--) {\n            const view = this._viewContainerRef.get(i + renderedStartIndex);\n            if (view && view.rootNodes.length) {\n                lastNode = view.rootNodes[view.rootNodes.length - 1];\n                break;\n            }\n        }\n        return firstNode && lastNode ?\n            getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;\n    }\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next(undefined);\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /** React to scroll state changes in the viewport. */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /** Swap out one `DataSource` for another. */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /** Update the `CdkVirtualForOfContext` for all views. */\n    _updateContext() {\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            let view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /** Apply changes to the DOM. */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                const view = this._insertViewForNewItem(currentIndex);\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView(adjustedPreviousIndex));\n            }\n            else { // Item moved.\n                const view = this._viewContainerRef.get(adjustedPreviousIndex);\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        });\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((record) => {\n            const view = this._viewContainerRef.get(record.currentIndex);\n            view.context.$implicit = record.item;\n        });\n        // Update the context variables on all items.\n        const count = this._data.length;\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            const view = this._viewContainerRef.get(i);\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /** Cache the given detached view. */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /** Inserts a view for a new item, either from the cache or by creating a new one. */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /** Update the computed properties on the `CdkVirtualForOfContext`. */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /** Creates a new embedded view and moves it to the given index */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: null,\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: this._cdkVirtualForOf,\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /** Inserts a recycled view from the cache at the given index. */\n    _insertViewFromCache(index) {\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /** Detaches the embedded view at the given index. */\n    _detachView(index) {\n        return this._viewContainerRef.detach(index);\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkScrollableModule {\n}\nCdkScrollableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkScrollableModule });\nCdkScrollableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkScrollableModule_Factory(t) { return new (t || CdkScrollableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkScrollableModule, { declarations: [CdkScrollable], exports: [CdkScrollable] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollableModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkScrollable],\n                declarations: [CdkScrollable]\n            }]\n    }], null, null); })();\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[\n            BidiModule,\n            PlatformModule,\n            CdkScrollableModule\n        ], BidiModule, CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule,\n        PlatformModule, CdkScrollableModule]; }, exports: function () { return [BidiModule, CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    BidiModule,\n                    PlatformModule,\n                    CdkScrollableModule\n                ],\n                exports: [\n                    BidiModule,\n                    CdkScrollableModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map"]}