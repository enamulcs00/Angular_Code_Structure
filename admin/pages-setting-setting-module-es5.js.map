{"version":3,"sources":["webpack:///src/app/pages/setting/profile/profile.component.ts","webpack:///src/app/pages/setting/profile/profile.component.html","webpack:///src/app/pages/setting/setting-routing.module.ts","webpack:///src/app/pages/setting/setting.component.ts","webpack:///src/app/pages/setting/setting.component.html","webpack:///src/app/pages/setting/setting.module.ts","webpack:///src/app/service/api.service.ts"],"names":["ProfileComponent","router","_apiService","_commService","fb","routes","isSubmitted","submitted","active","getProfileDetails","updateProfile","group","name","required","minLength","maxLength","pattern","email","phone","changePasswordForm","oldPassword","password","confirmPassword","validator","MustMatch","getRequestWithoutbody","subscribe","response","console","log","profileDetails","patchValue","err","errorMsg","error","message","hideSpinner","valid","putRequest","value","navigate","successMsg","postRequest","selector","templateUrl","styleUrls","path","component","children","SettingRoutingModule","forChild","imports","exports","SettingComponent","SettingModule","declarations","ApiService","http","_router","baseUrl","getToken","localStorage","getItem","endPoint","reqBody","get","post","put","providedIn"],"mappings":"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","file":"pages-setting-setting-module-es5.js","sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n import { FormBuilder, FormGroup, Validators,ValidationErrors, ValidatorFn} from '@angular/forms';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ApiService } from '../../../service/api.service';\r\nimport { CommonService } from '../../../service/common.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  isSubmitted:boolean=false\r\n  submitted:boolean=false\r\n  updateProfile:FormGroup\r\n  changePasswordForm:FormGroup\r\n  active = 1;\r\n  profileDetails: any;\r\n  constructor(private router:Router, private _apiService:ApiService, private _commService:CommonService, private fb:FormBuilder, private routes:ActivatedRoute  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getProfileDetails()\r\n    \r\n     this.updateProfile=this.fb.group({\r\n\r\n      name:[null, [Validators.required,  Validators.minLength(2),Validators.maxLength(20), Validators.pattern(/^[a-zA-Z]*$/)]],\r\n      email:[null, [Validators.required,  Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$')]],\r\n      phone:[null, [Validators.required,  Validators.minLength(7),Validators.maxLength(15),  Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]]\r\n\r\n\r\n\r\n     })\r\n     this.changePasswordForm = this.fb.group(\r\n      {\r\n        // email: [\"\", [Validators.required, Validators.pattern(\"[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}\")]],\r\n        oldPassword: [\"\", [Validators.required]],\r\n        password: [\"\", [Validators.required, Validators.minLength(8)]],\r\n        confirmPassword: [\"\", [Validators.required]],\r\n      },\r\n      {\r\n        validator: this._commService.MustMatch(\r\n          \"password\",\r\n          \"confirmPassword\"\r\n        ),\r\n      }\r\n    );\r\n \r\n  }\r\n    \r\n     \r\n\r\n  \r\n  getProfileDetails(){\r\n    this._apiService.getRequestWithoutbody('api/v1/admin/getProfile').subscribe(response => {\r\n    \r\n      console.log(\"response\",response)\r\n      this.profileDetails=response['data'];\r\n      this.updateProfile.patchValue({\r\n        name:this.profileDetails.name,\r\n        email:this.profileDetails.email,\r\n        phone:this.profileDetails.phone\r\n\r\n      })\r\n      console.log(\"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\r\n      \r\n    },(err: any) => {\r\n      this._commService.errorMsg(err.error.message)\r\n      this._commService.hideSpinner()\r\n    })\r\n\r\n    \r\n\r\n\r\n  }\r\n  profileUpdate(){\r\n    console.log(\"888888888888888888888\")\r\n    this.isSubmitted=true\r\n    if(this.isSubmitted && this.updateProfile.valid ){\r\n      this._apiService\r\n      .putRequest(\"api/v1/admin/updateProfile\", this.updateProfile.value)\r\n      .subscribe((response:any) => {\r\n        console.log(response);\r\n         this.router.navigate([\"/dashboard/dashboard\"]);\r\n        this._commService.successMsg(response.message);\r\n      },(err: any) => {\r\n        this._commService.errorMsg(err.error.message)\r\n        this._commService.hideSpinner()\r\n      }\r\n      );\r\n  } \r\n\r\n    }\r\n  \r\n  onSubmit() {\r\n    this.submitted = true;\r\n    if (this.changePasswordForm.valid && this.submitted) {\r\n     \r\n      this._apiService\r\n        .postRequest(\"api/v1/admin/changePassword\", this.changePasswordForm.value)\r\n        .subscribe((response) => {\r\n          console.log(response);\r\n           this.router.navigate([\"/dashboard/dashboard\"]);\r\n          this._commService.successMsg(response[\"message\"]);\r\n        }\r\n        ,(err: any) => {\r\n          this._commService.errorMsg(err.error.message)\r\n          this._commService.hideSpinner()\r\n        });\r\n    } \r\n  }\r\n}\r\n\r\n\r\n\r\n","<div class=\"row\">\r\n    <!-- Column -->\r\n    <div class=\"col-lg-4 col-xlg-3 col-md-5\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"m-t-30 text-center\">\r\n                    <img src=\"assets/images/qSznlfGw.jpg\" class=\"img-circle\" width=\"150\" />\r\n                    <h4 class=\"card-title m-t-10\">Nina</h4>\r\n                    <!-- <h6 class=\"card-subtitle\">Accoubts Manager Amix corp</h6>                   -->\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <hr> </div>\r\n            <!-- <div class=\"card-body\">\r\n                <small class=\"text-muted\">Email address </small>\r\n                <h6>hannagover@gmail.com</h6>\r\n                <small class=\"text-muted p-t-30 db\">Phone</small>\r\n                <h6>+91 654 784 547</h6>\r\n                <small class=\"text-muted p-t-30 db\">Address</small>\r\n                <h6>71 Pilgrim Avenue Chevy Chase, MD 20815</h6>\r\n                <div class=\"map-box\">\r\n                    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d470029.1604841957!2d72.29955005258641!3d23.019996818380896!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x395e848aba5bd449%3A0x4fcedd11614f6516!2sAhmedabad%2C+Gujarat!5e0!3m2!1sen!2sin!4v1493204785508\"\r\n                        width=\"100%\" height=\"150\" frameborder=\"0\" style=\"border:0\" allowfullscreen></iframe>\r\n                </div>\r\n            </div> -->\r\n        </div>\r\n    </div>\r\n    <!-- Column -->\r\n    <!-- Column -->\r\n    <div class=\"col-lg-8 col-xlg-9 col-md-7\">\r\n        <div class=\"card p-2\">         \r\n           \r\n            \r\n            <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n             \r\n                <li [ngbNavItem]=\"1\">\r\n                  <a ngbNavLink>Profile</a>\r\n                  <ng-template ngbNavContent>\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Full Name</strong>\r\n                                <br>\r\n                                <p class=\"text-muted\">{{profileDetails?.name ? profileDetails.name : '---' }}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Mobile</strong>\r\n                                <br>\r\n                                <p class=\"text-muted\">{{profileDetails?.phone ? profileDetails.phone : '---'}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xs-6 b-r\"> <strong>Email</strong>\r\n                                <br>\r\n                                <p class=\"text-muted\">{{profileDetails?.email ? profileDetails.email : '---'}}</p>\r\n                            </div>\r\n                            <div class=\"col-md-3 col-xs-6\"> <strong>Location</strong>\r\n                                <br>\r\n                                <p class=\"text-muted\">{{profileDetails?.location ? profileDetails.location : '---'}}</p>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <hr>\r\n                        <p class=\"m-t-30\">Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.Cras dapibus. Vivamus elementum semper nisi. Aenean vulputate eleifend tellus. Aenean leo ligula, porttitor eu, consequat vitae, eleifend ac, enim.</p>\r\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries </p> -->\r\n                    </div>\r\n                  </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"2\">\r\n                  <a ngbNavLink>Settings</a>\r\n                  <ng-template ngbNavContent>\r\n                    <div class=\"card-body\">\r\n                        <form [formGroup]=\"updateProfile\" class=\"form-horizontal form-material\">\r\n                            <div class=\"form-group\">\r\n                                <label class=\"col-md-12\">Full Name</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"text\" placeholder=\"Full Name\" class=\"form-control form-control-line\" formControlName=\"name\"> \r\n                                    <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['name'].hasError('required')\">Name \r\n                                        is\r\n                                        required</mat-error>\r\n                                        <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['name'].hasError('minlength')\">\r\n                                            Minimum length of name should be 2 characters\r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['name'].hasError('maxlength')\">\r\n                                          Maximum  length of name should be 20 characters\r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['name'].hasError('pattern') && !updateProfile.controls['name'].hasError('minlength') && !updateProfile.controls['name'].hasError('maxlength') \"   >\r\n                                        Valid name is required\r\n                                    </mat-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label for=\"example-email\" class=\"col-md-12\">Email</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"email\" placeholder=\"Email\" formControlName=\"email\" class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                                    <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['email'].hasError('required')\">Email \r\n                                        is\r\n                                        required</mat-error>\r\n                                        <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['email'].hasError('pattern')\">\r\n                                            Valid Email is required\r\n                                        </mat-error>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"form-group\">\r\n                                <label class=\"col-md-12\">Password</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"password\" value=\"password\" class=\"form-control form-control-line\">\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"form-group\">\r\n                                <label class=\"col-md-12\">Phone No</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"text\" placeholder=\"Phone No\" formControlName=\"phone\" class=\"form-control form-control-line\">\r\n                                    <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['phone'].hasError('required') \">Phone \r\n                                        is\r\n                                        required</mat-error>\r\n                                        <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['phone'].hasError('maxlength')\">\r\n                                            Maximum  length of phone should be 15 \r\n                                        </mat-error>\r\n                                        <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['phone'].hasError('minlength')\">\r\n                                          Minimum  length of phone should be 7 \r\n                                      </mat-error>\r\n                                      <mat-error *ngIf=\"  isSubmitted && updateProfile.controls['phone'].hasError('pattern')  && !updateProfile.controls['phone'].hasError('minlength') && !updateProfile.controls['phone'].hasError('maxlength')\">\r\n                                      Valid Phone Number is required \r\n                                    </mat-error>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"form-group\">\r\n                                <label class=\"col-md-12\">Message</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <textarea rows=\"5\" class=\"form-control form-control-line\"></textarea>\r\n                                </div>\r\n                            </div> -->\r\n                            <!-- <div class=\"form-group\">\r\n                                <label class=\"col-sm-12\">Select Country</label>\r\n                                <div class=\"col-sm-12\">\r\n                                    <select class=\"form-control form-control-line\">\r\n                                        <option>London</option>\r\n                                        <option>India</option>\r\n                                        <option>Usa</option>\r\n                                        <option>Canada</option>\r\n                                        <option>Thailand</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"form-group\">\r\n                                <div class=\"col-sm-12\">\r\n                                    <button (click)=\"profileUpdate()\" class=\"btn btn-primary\">Update Profile</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                  </ng-template>\r\n                </li>\r\n                <li [ngbNavItem]=\"3\">\r\n                    <a ngbNavLink>Change Password</a>\r\n                    <ng-template ngbNavContent>\r\n                      <div class=\"card-body\">\r\n                          <form [formGroup]=\"changePasswordForm\" class=\"form-horizontal form-material\">\r\n                              <div class=\"form-group\">\r\n                                  <label class=\"col-md-12\">Old Password</label>\r\n                                  <div class=\"col-md-12\">\r\n                                      <input type=\"password\" placeholder=\"Old Password\" formControlName=\"oldPassword\" class=\"form-control form-control-line\">\r\n                                      <mat-error *ngIf=\"  submitted && changePasswordForm.controls['oldPassword'].hasError('required')\">Old Password \r\n                                        is\r\n                                        required</mat-error>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"form-group\">\r\n                                  <label for=\"example-email\" class=\"col-md-12\">New Password</label>\r\n                                  <div class=\"col-md-12\">\r\n                                      <input type=\"password\" placeholder=\"New Passowrd\" formControlName=\"password\" class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                                      <mat-error *ngIf=\"  submitted && changePasswordForm.controls['password'].hasError('required')\">New Password \r\n                                        is\r\n                                        required</mat-error>\r\n                                        <mat-error *ngIf=\"  submitted && changePasswordForm.controls['password'].hasError('minlength')\">Password length should be minimum 8 characters \r\n                                            \r\n                                            </mat-error>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=\"form-group\">\r\n                                <label for=\"example-email\" class=\"col-md-12\">Confirm Password</label>\r\n                                <div class=\"col-md-12\">\r\n                                    <input type=\"password\" placeholder=\"Confirm Passowrd\" formControlName=\"confirmPassword\" class=\"form-control form-control-line\" name=\"example-email\" id=\"example-email\">\r\n                                    <mat-error *ngIf=\"  submitted && changePasswordForm.controls['confirmPassword'].hasError('required')\">Confirm Password \r\n                                        is\r\n                                        required</mat-error>\r\n                                        <mat-error *ngIf=\"  submitted && changePasswordForm.controls['confirmPassword'].hasError('mustMatch')\">Password must match \r\n                                            \r\n                                            </mat-error>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                              <div class=\"form-group\">\r\n                                  <div class=\"col-sm-12\">\r\n                                      <button (click)=\"onSubmit()\" class=\"btn btn-primary\">Save</button>\r\n                                  </div>\r\n                              </div>\r\n                          </form>\r\n                      </div>\r\n                    </ng-template>\r\n                  </li>\r\n              </ul>\r\n              \r\n              <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n        </div>\r\n   \r\n    </div>\r\n    <!-- Column -->\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '../../service/auth-guard/auth.guard';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { SettingComponent } from './setting.component';\r\n// import {AuthGuard} from '../'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component:SettingComponent,\r\n    children:[\r\n      {\r\n        path:\"profile\",\r\n        component:ProfileComponent,\r\n        // canActivate: [AuthGuard],\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingRoutingModule } from './setting-routing.module';\r\nimport { SettingComponent } from './setting.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [SettingComponent, ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SettingRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class SettingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment'\nimport { HttpClient } from '@angular/common/http';\n\nimport { map, catchError } from \"rxjs/operators\";\nimport { Observable } from 'rxjs/internal/Observable';\nimport { CommonService } from './common.service';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  baseUrl = environment.baseUrl;\n\n  constructor(private http:HttpClient,private _commService:CommonService, private _router:Router) { }\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"accessToken\");\n  }\n  \n  getRequest(endPoint, reqBody) {\n    return this.http.get(`${this.baseUrl}${endPoint}`, reqBody)\n \n  }\n  getRequestWithoutbody(endPoint) {\n    return this.http.get(`${this.baseUrl}${endPoint}`)\n \n  }\n  postRequest(endPoint, reqBody) {\n    return this.http.post(`${this.baseUrl}${endPoint}`, reqBody)\n\n  }\n  postRequestById(endPoint,reqBody){\n    return this.http.post(`${this.baseUrl}${endPoint}`, reqBody)\n\n  }\n\n  putRequest(endPoint, reqBody) {\n    return this.http.put(`${this.baseUrl}${endPoint}`, reqBody)  \n \n  }\n\n  deleteRequest(endPoint, reqBody) {\n    return this.http.delete(`${this.baseUrl}${endPoint}`, reqBody)\n}\n}\n"]}